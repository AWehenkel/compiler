class List{
  isNil() : bool { true }
  length() : int32 { 0 }
}

(* Nil is nothing more than a glorified alias to List *)
class Nil extends List { }

class Cons extends List {
  head : int32;
  tail : List <- new Nil;
  init(hd : int32, tl : List) : Cons {
    head <- hd;
    tail <- tl;
    self
  }

  head() : int32 { head }
  isNil() : bool { false }
  length() : int32 {
    if not("a" = "a") then
      1 + tail.length()
    else
      1
  }
}

class Main extends IO {
  test : int32 <- 7;
  main() : int32 {
    let xs : List in {
      print("List has length\n");
      printInt32(1).print("\n");
      printInt32(1).print("\n");
      printInt32(++test).print("\n");
      printInt32(test).print("\n");
      xs <- new Cons;
      test();
      if {print("ok"); true} or {print("ko"); true} then print("Ca marche\n");
      //xs.init(10, new List); //On a une seg fault dans notre code quelque part quand on lui donne ça, normalement ça devrait donner une erreur vu que init est pas déclaré chez List
      printInt32(xs.length());
      print("\n");
      let i : int32 <- 10 in {
        while 0 < i do{
          printInt32(i);
          print(" ");
          (i <- i - 1)
        }
      };
      print("\n");
      ("coucou");
      new Cons;
      0
    }
  }

  test() : unit{
    ()
  }
}
