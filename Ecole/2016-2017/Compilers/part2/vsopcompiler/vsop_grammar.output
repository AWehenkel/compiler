Terminals unused in grammar

   T_ERROR


State 148 conflicts: 11 shift/reduce
State 150 conflicts: 10 shift/reduce
State 162 conflicts: 10 shift/reduce
State 166 conflicts: 10 shift/reduce


Grammar

    0 $accept: start $end

    1 start: START_LEXICAL Input
    2      | START_SYNTAX program
    3      | START_SEMANTIC program

    4 Input: %empty
    5      | Input T_AND
    6      | Input T_BOOL
    7      | Input T_CLASS
    8      | Input T_DO
    9      | Input T_ELSE
   10      | Input T_EXTENDS
   11      | Input T_FALSE
   12      | Input T_IF
   13      | Input T_IN
   14      | Input T_INT32
   15      | Input T_ISNULL
   16      | Input T_LET
   17      | Input T_NEW
   18      | Input T_NOT
   19      | Input T_STRING
   20      | Input T_THEN
   21      | Input T_TRUE
   22      | Input T_UNIT
   23      | Input T_WHILE
   24      | Input T_OBJ_ID
   25      | Input T_INT_LIT
   26      | Input T_TYPE_ID
   27      | Input T_STRING_LIT
   28      | Input T_L_BRACE
   29      | Input T_R_BRACE
   30      | Input T_R_PAR
   31      | Input T_L_PAR
   32      | Input T_COLON
   33      | Input T_SEMI_COLON
   34      | Input T_COMMA
   35      | Input T_PLUS
   36      | Input T_MINUS
   37      | Input T_TIMES
   38      | Input T_DIV
   39      | Input T_POW
   40      | Input T_DOT
   41      | Input T_EQUAL
   42      | Input T_LOWER
   43      | Input T_LEQ
   44      | Input T_ASSIGN
   45      | Input T_COMMENTS

   46 program: class
   47        | program class

   48 t_type_id: T_TYPE_ID

   49 t_obj_id: T_OBJ_ID

   50 class: T_CLASS t_type_id extend T_L_BRACE class-body T_R_BRACE

   51 extend: %empty
   52       | T_EXTENDS t_type_id

   53 class-body: %empty
   54           | class-body field
   55           | class-body method

   56 field: t_obj_id T_COLON type assign T_SEMI_COLON

   57 assign: %empty
   58       | T_ASSIGN expr

   59 method: t_obj_id T_L_PAR formals T_R_PAR T_COLON type block

   60 type: t_type_id
   61     | T_INT32
   62     | T_BOOL
   63     | T_STRING
   64     | T_UNIT

   65 formals: %empty
   66        | formal virgul-formals

   67 virgul-formals: %empty
   68               | T_COMMA formal virgul-formals

   69 formal: t_obj_id T_COLON type

   70 block: T_L_BRACE expr sc-expr T_R_BRACE

   71 sc-expr: %empty
   72        | T_SEMI_COLON expr sc-expr

   73 expr: T_IF expr T_THEN expr
   74     | T_IF expr T_THEN expr T_ELSE expr
   75     | T_WHILE expr T_DO expr
   76     | T_LET t_obj_id T_COLON type assign T_IN expr
   77     | t_obj_id T_ASSIGN expr
   78     | T_NOT expr
   79     | T_MINUS expr
   80     | T_ISNULL expr
   81     | expr T_PLUS expr
   82     | expr T_AND expr
   83     | expr T_EQUAL expr
   84     | expr T_LEQ expr
   85     | expr T_LOWER expr
   86     | expr T_MINUS expr
   87     | expr T_TIMES expr
   88     | expr T_DIV expr
   89     | expr T_POW expr
   90     | t_obj_id T_L_PAR args T_R_PAR
   91     | expr T_DOT t_obj_id T_L_PAR args T_R_PAR
   92     | T_NEW t_type_id
   93     | t_obj_id
   94     | literal
   95     | T_L_PAR T_R_PAR
   96     | T_L_PAR expr T_R_PAR
   97     | block

   98 args: %empty
   99     | expr comma-arg

  100 comma-arg: %empty
  101          | T_COMMA expr comma-arg

  102 literal: T_INT_LIT
  103        | T_STRING_LIT
  104        | boolean-literal

  105 boolean-literal: T_TRUE
  106                | T_FALSE


Terminals, with rules where they appear

$end (0) 0
error (256)
T_AND (258) 5 82
T_BOOL (259) 6 62
T_CLASS (260) 7 50
T_DO (261) 8 75
T_ELSE (262) 9 74
T_EXTENDS (263) 10 52
T_FALSE (264) 11 106
T_IF (265) 12 73 74
T_IN (266) 13 76
T_INT32 (267) 14 61
T_ISNULL (268) 15 80
T_LET (269) 16 76
T_NEW (270) 17 92
T_NOT (271) 18 78
T_STRING (272) 19 63
T_THEN (273) 20 73 74
T_TRUE (274) 21 105
T_UNIT (275) 22 64
T_WHILE (276) 23 75
T_OBJ_ID (277) 24 49
T_INT_LIT (278) 25 102
T_TYPE_ID (279) 26 48
T_STRING_LIT (280) 27 103
T_L_BRACE (281) 28 50 70
T_R_BRACE (282) 29 50 70
T_R_PAR (283) 30 59 90 91 95 96
T_L_PAR (284) 31 59 90 91 95 96
T_COLON (285) 32 56 59 69 76
T_SEMI_COLON (286) 33 56 72
T_COMMA (287) 34 68 101
T_PLUS (288) 35 81
T_MINUS (289) 36 79 86
T_TIMES (290) 37 87
T_DIV (291) 38 88
T_POW (292) 39 89
T_DOT (293) 40 91
T_EQUAL (294) 41 83
T_LOWER (295) 42 85
T_LEQ (296) 43 84
T_ASSIGN (297) 44 58 77
T_COMMENTS (298) 45
START_SYNTAX (299) 2
START_LEXICAL (300) 1
START_SEMANTIC (301) 3
T_ERROR (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
start (49)
    on left: 1 2 3, on right: 0
Input (50)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
    45, on right: 1 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
    44 45
program (51)
    on left: 46 47, on right: 2 3 47
t_type_id (52)
    on left: 48, on right: 50 52 60 92
t_obj_id (53)
    on left: 49, on right: 56 59 69 76 77 90 91 93
class (54)
    on left: 50, on right: 46 47
extend (55)
    on left: 51 52, on right: 50
class-body (56)
    on left: 53 54 55, on right: 50 54 55
field (57)
    on left: 56, on right: 54
assign (58)
    on left: 57 58, on right: 56 76
method (59)
    on left: 59, on right: 55
type (60)
    on left: 60 61 62 63 64, on right: 56 59 69 76
formals (61)
    on left: 65 66, on right: 59
virgul-formals (62)
    on left: 67 68, on right: 66 68
formal (63)
    on left: 69, on right: 66 68
block (64)
    on left: 70, on right: 59 97
sc-expr (65)
    on left: 71 72, on right: 70 72
expr (66)
    on left: 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
    91 92 93 94 95 96 97, on right: 58 70 72 73 74 75 76 77 78 79 80
    81 82 83 84 85 86 87 88 89 91 96 99 101
args (67)
    on left: 98 99, on right: 90 91
comma-arg (68)
    on left: 100 101, on right: 99 101
literal (69)
    on left: 102 103 104, on right: 94
boolean-literal (70)
    on left: 105 106, on right: 104


State 0

    0 $accept: . start $end

    START_SYNTAX    shift, and go to state 1
    START_LEXICAL   shift, and go to state 2
    START_SEMANTIC  shift, and go to state 3

    start  go to state 4


State 1

    2 start: START_SYNTAX . program

    T_CLASS  shift, and go to state 5

    program  go to state 6
    class    go to state 7


State 2

    1 start: START_LEXICAL . Input

    $default  reduce using rule 4 (Input)

    Input  go to state 8


State 3

    3 start: START_SEMANTIC . program

    T_CLASS  shift, and go to state 5

    program  go to state 9
    class    go to state 7


State 4

    0 $accept: start . $end

    $end  shift, and go to state 10


State 5

   50 class: T_CLASS . t_type_id extend T_L_BRACE class-body T_R_BRACE

    T_TYPE_ID  shift, and go to state 11

    t_type_id  go to state 12


State 6

    2 start: START_SYNTAX program .
   47 program: program . class

    T_CLASS  shift, and go to state 5

    $default  reduce using rule 2 (start)

    class  go to state 13


State 7

   46 program: class .

    $default  reduce using rule 46 (program)


State 8

    1 start: START_LEXICAL Input .
    5 Input: Input . T_AND
    6      | Input . T_BOOL
    7      | Input . T_CLASS
    8      | Input . T_DO
    9      | Input . T_ELSE
   10      | Input . T_EXTENDS
   11      | Input . T_FALSE
   12      | Input . T_IF
   13      | Input . T_IN
   14      | Input . T_INT32
   15      | Input . T_ISNULL
   16      | Input . T_LET
   17      | Input . T_NEW
   18      | Input . T_NOT
   19      | Input . T_STRING
   20      | Input . T_THEN
   21      | Input . T_TRUE
   22      | Input . T_UNIT
   23      | Input . T_WHILE
   24      | Input . T_OBJ_ID
   25      | Input . T_INT_LIT
   26      | Input . T_TYPE_ID
   27      | Input . T_STRING_LIT
   28      | Input . T_L_BRACE
   29      | Input . T_R_BRACE
   30      | Input . T_R_PAR
   31      | Input . T_L_PAR
   32      | Input . T_COLON
   33      | Input . T_SEMI_COLON
   34      | Input . T_COMMA
   35      | Input . T_PLUS
   36      | Input . T_MINUS
   37      | Input . T_TIMES
   38      | Input . T_DIV
   39      | Input . T_POW
   40      | Input . T_DOT
   41      | Input . T_EQUAL
   42      | Input . T_LOWER
   43      | Input . T_LEQ
   44      | Input . T_ASSIGN
   45      | Input . T_COMMENTS

    T_AND         shift, and go to state 14
    T_BOOL        shift, and go to state 15
    T_CLASS       shift, and go to state 16
    T_DO          shift, and go to state 17
    T_ELSE        shift, and go to state 18
    T_EXTENDS     shift, and go to state 19
    T_FALSE       shift, and go to state 20
    T_IF          shift, and go to state 21
    T_IN          shift, and go to state 22
    T_INT32       shift, and go to state 23
    T_ISNULL      shift, and go to state 24
    T_LET         shift, and go to state 25
    T_NEW         shift, and go to state 26
    T_NOT         shift, and go to state 27
    T_STRING      shift, and go to state 28
    T_THEN        shift, and go to state 29
    T_TRUE        shift, and go to state 30
    T_UNIT        shift, and go to state 31
    T_WHILE       shift, and go to state 32
    T_OBJ_ID      shift, and go to state 33
    T_INT_LIT     shift, and go to state 34
    T_TYPE_ID     shift, and go to state 35
    T_STRING_LIT  shift, and go to state 36
    T_L_BRACE     shift, and go to state 37
    T_R_BRACE     shift, and go to state 38
    T_R_PAR       shift, and go to state 39
    T_L_PAR       shift, and go to state 40
    T_COLON       shift, and go to state 41
    T_SEMI_COLON  shift, and go to state 42
    T_COMMA       shift, and go to state 43
    T_PLUS        shift, and go to state 44
    T_MINUS       shift, and go to state 45
    T_TIMES       shift, and go to state 46
    T_DIV         shift, and go to state 47
    T_POW         shift, and go to state 48
    T_DOT         shift, and go to state 49
    T_EQUAL       shift, and go to state 50
    T_LOWER       shift, and go to state 51
    T_LEQ         shift, and go to state 52
    T_ASSIGN      shift, and go to state 53
    T_COMMENTS    shift, and go to state 54

    $default  reduce using rule 1 (start)


State 9

    3 start: START_SEMANTIC program .
   47 program: program . class

    T_CLASS  shift, and go to state 5

    $default  reduce using rule 3 (start)

    class  go to state 13


State 10

    0 $accept: start $end .

    $default  accept


State 11

   48 t_type_id: T_TYPE_ID .

    $default  reduce using rule 48 (t_type_id)


State 12

   50 class: T_CLASS t_type_id . extend T_L_BRACE class-body T_R_BRACE

    T_EXTENDS  shift, and go to state 55

    $default  reduce using rule 51 (extend)

    extend  go to state 56


State 13

   47 program: program class .

    $default  reduce using rule 47 (program)


State 14

    5 Input: Input T_AND .

    $default  reduce using rule 5 (Input)


State 15

    6 Input: Input T_BOOL .

    $default  reduce using rule 6 (Input)


State 16

    7 Input: Input T_CLASS .

    $default  reduce using rule 7 (Input)


State 17

    8 Input: Input T_DO .

    $default  reduce using rule 8 (Input)


State 18

    9 Input: Input T_ELSE .

    $default  reduce using rule 9 (Input)


State 19

   10 Input: Input T_EXTENDS .

    $default  reduce using rule 10 (Input)


State 20

   11 Input: Input T_FALSE .

    $default  reduce using rule 11 (Input)


State 21

   12 Input: Input T_IF .

    $default  reduce using rule 12 (Input)


State 22

   13 Input: Input T_IN .

    $default  reduce using rule 13 (Input)


State 23

   14 Input: Input T_INT32 .

    $default  reduce using rule 14 (Input)


State 24

   15 Input: Input T_ISNULL .

    $default  reduce using rule 15 (Input)


State 25

   16 Input: Input T_LET .

    $default  reduce using rule 16 (Input)


State 26

   17 Input: Input T_NEW .

    $default  reduce using rule 17 (Input)


State 27

   18 Input: Input T_NOT .

    $default  reduce using rule 18 (Input)


State 28

   19 Input: Input T_STRING .

    $default  reduce using rule 19 (Input)


State 29

   20 Input: Input T_THEN .

    $default  reduce using rule 20 (Input)


State 30

   21 Input: Input T_TRUE .

    $default  reduce using rule 21 (Input)


State 31

   22 Input: Input T_UNIT .

    $default  reduce using rule 22 (Input)


State 32

   23 Input: Input T_WHILE .

    $default  reduce using rule 23 (Input)


State 33

   24 Input: Input T_OBJ_ID .

    $default  reduce using rule 24 (Input)


State 34

   25 Input: Input T_INT_LIT .

    $default  reduce using rule 25 (Input)


State 35

   26 Input: Input T_TYPE_ID .

    $default  reduce using rule 26 (Input)


State 36

   27 Input: Input T_STRING_LIT .

    $default  reduce using rule 27 (Input)


State 37

   28 Input: Input T_L_BRACE .

    $default  reduce using rule 28 (Input)


State 38

   29 Input: Input T_R_BRACE .

    $default  reduce using rule 29 (Input)


State 39

   30 Input: Input T_R_PAR .

    $default  reduce using rule 30 (Input)


State 40

   31 Input: Input T_L_PAR .

    $default  reduce using rule 31 (Input)


State 41

   32 Input: Input T_COLON .

    $default  reduce using rule 32 (Input)


State 42

   33 Input: Input T_SEMI_COLON .

    $default  reduce using rule 33 (Input)


State 43

   34 Input: Input T_COMMA .

    $default  reduce using rule 34 (Input)


State 44

   35 Input: Input T_PLUS .

    $default  reduce using rule 35 (Input)


State 45

   36 Input: Input T_MINUS .

    $default  reduce using rule 36 (Input)


State 46

   37 Input: Input T_TIMES .

    $default  reduce using rule 37 (Input)


State 47

   38 Input: Input T_DIV .

    $default  reduce using rule 38 (Input)


State 48

   39 Input: Input T_POW .

    $default  reduce using rule 39 (Input)


State 49

   40 Input: Input T_DOT .

    $default  reduce using rule 40 (Input)


State 50

   41 Input: Input T_EQUAL .

    $default  reduce using rule 41 (Input)


State 51

   42 Input: Input T_LOWER .

    $default  reduce using rule 42 (Input)


State 52

   43 Input: Input T_LEQ .

    $default  reduce using rule 43 (Input)


State 53

   44 Input: Input T_ASSIGN .

    $default  reduce using rule 44 (Input)


State 54

   45 Input: Input T_COMMENTS .

    $default  reduce using rule 45 (Input)


State 55

   52 extend: T_EXTENDS . t_type_id

    T_TYPE_ID  shift, and go to state 11

    t_type_id  go to state 57


State 56

   50 class: T_CLASS t_type_id extend . T_L_BRACE class-body T_R_BRACE

    T_L_BRACE  shift, and go to state 58


State 57

   52 extend: T_EXTENDS t_type_id .

    $default  reduce using rule 52 (extend)


State 58

   50 class: T_CLASS t_type_id extend T_L_BRACE . class-body T_R_BRACE

    $default  reduce using rule 53 (class-body)

    class-body  go to state 59


State 59

   50 class: T_CLASS t_type_id extend T_L_BRACE class-body . T_R_BRACE
   54 class-body: class-body . field
   55           | class-body . method

    T_OBJ_ID   shift, and go to state 60
    T_R_BRACE  shift, and go to state 61

    t_obj_id  go to state 62
    field     go to state 63
    method    go to state 64


State 60

   49 t_obj_id: T_OBJ_ID .

    $default  reduce using rule 49 (t_obj_id)


State 61

   50 class: T_CLASS t_type_id extend T_L_BRACE class-body T_R_BRACE .

    $default  reduce using rule 50 (class)


State 62

   56 field: t_obj_id . T_COLON type assign T_SEMI_COLON
   59 method: t_obj_id . T_L_PAR formals T_R_PAR T_COLON type block

    T_L_PAR  shift, and go to state 65
    T_COLON  shift, and go to state 66


State 63

   54 class-body: class-body field .

    $default  reduce using rule 54 (class-body)


State 64

   55 class-body: class-body method .

    $default  reduce using rule 55 (class-body)


State 65

   59 method: t_obj_id T_L_PAR . formals T_R_PAR T_COLON type block

    T_OBJ_ID  shift, and go to state 60

    $default  reduce using rule 65 (formals)

    t_obj_id  go to state 67
    formals   go to state 68
    formal    go to state 69


State 66

   56 field: t_obj_id T_COLON . type assign T_SEMI_COLON

    T_BOOL     shift, and go to state 70
    T_INT32    shift, and go to state 71
    T_STRING   shift, and go to state 72
    T_UNIT     shift, and go to state 73
    T_TYPE_ID  shift, and go to state 11

    t_type_id  go to state 74
    type       go to state 75


State 67

   69 formal: t_obj_id . T_COLON type

    T_COLON  shift, and go to state 76


State 68

   59 method: t_obj_id T_L_PAR formals . T_R_PAR T_COLON type block

    T_R_PAR  shift, and go to state 77


State 69

   66 formals: formal . virgul-formals

    T_COMMA  shift, and go to state 78

    $default  reduce using rule 67 (virgul-formals)

    virgul-formals  go to state 79


State 70

   62 type: T_BOOL .

    $default  reduce using rule 62 (type)


State 71

   61 type: T_INT32 .

    $default  reduce using rule 61 (type)


State 72

   63 type: T_STRING .

    $default  reduce using rule 63 (type)


State 73

   64 type: T_UNIT .

    $default  reduce using rule 64 (type)


State 74

   60 type: t_type_id .

    $default  reduce using rule 60 (type)


State 75

   56 field: t_obj_id T_COLON type . assign T_SEMI_COLON

    T_ASSIGN  shift, and go to state 80

    $default  reduce using rule 57 (assign)

    assign  go to state 81


State 76

   69 formal: t_obj_id T_COLON . type

    T_BOOL     shift, and go to state 70
    T_INT32    shift, and go to state 71
    T_STRING   shift, and go to state 72
    T_UNIT     shift, and go to state 73
    T_TYPE_ID  shift, and go to state 11

    t_type_id  go to state 74
    type       go to state 82


State 77

   59 method: t_obj_id T_L_PAR formals T_R_PAR . T_COLON type block

    T_COLON  shift, and go to state 83


State 78

   68 virgul-formals: T_COMMA . formal virgul-formals

    T_OBJ_ID  shift, and go to state 60

    t_obj_id  go to state 67
    formal    go to state 84


State 79

   66 formals: formal virgul-formals .

    $default  reduce using rule 66 (formals)


State 80

   58 assign: T_ASSIGN . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 100
    literal          go to state 101
    boolean-literal  go to state 102


State 81

   56 field: t_obj_id T_COLON type assign . T_SEMI_COLON

    T_SEMI_COLON  shift, and go to state 103


State 82

   69 formal: t_obj_id T_COLON type .

    $default  reduce using rule 69 (formal)


State 83

   59 method: t_obj_id T_L_PAR formals T_R_PAR T_COLON . type block

    T_BOOL     shift, and go to state 70
    T_INT32    shift, and go to state 71
    T_STRING   shift, and go to state 72
    T_UNIT     shift, and go to state 73
    T_TYPE_ID  shift, and go to state 11

    t_type_id  go to state 74
    type       go to state 104


State 84

   68 virgul-formals: T_COMMA formal . virgul-formals

    T_COMMA  shift, and go to state 78

    $default  reduce using rule 67 (virgul-formals)

    virgul-formals  go to state 105


State 85

  106 boolean-literal: T_FALSE .

    $default  reduce using rule 106 (boolean-literal)


State 86

   73 expr: T_IF . expr T_THEN expr
   74     | T_IF . expr T_THEN expr T_ELSE expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 106
    literal          go to state 101
    boolean-literal  go to state 102


State 87

   80 expr: T_ISNULL . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 107
    literal          go to state 101
    boolean-literal  go to state 102


State 88

   76 expr: T_LET . t_obj_id T_COLON type assign T_IN expr

    T_OBJ_ID  shift, and go to state 60

    t_obj_id  go to state 108


State 89

   92 expr: T_NEW . t_type_id

    T_TYPE_ID  shift, and go to state 11

    t_type_id  go to state 109


State 90

   78 expr: T_NOT . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 110
    literal          go to state 101
    boolean-literal  go to state 102


State 91

  105 boolean-literal: T_TRUE .

    $default  reduce using rule 105 (boolean-literal)


State 92

   75 expr: T_WHILE . expr T_DO expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 111
    literal          go to state 101
    boolean-literal  go to state 102


State 93

  102 literal: T_INT_LIT .

    $default  reduce using rule 102 (literal)


State 94

  103 literal: T_STRING_LIT .

    $default  reduce using rule 103 (literal)


State 95

   70 block: T_L_BRACE . expr sc-expr T_R_BRACE

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 112
    literal          go to state 101
    boolean-literal  go to state 102


State 96

   95 expr: T_L_PAR . T_R_PAR
   96     | T_L_PAR . expr T_R_PAR

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_R_PAR       shift, and go to state 113
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 114
    literal          go to state 101
    boolean-literal  go to state 102


State 97

   79 expr: T_MINUS . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 115
    literal          go to state 101
    boolean-literal  go to state 102


State 98

   77 expr: t_obj_id . T_ASSIGN expr
   90     | t_obj_id . T_L_PAR args T_R_PAR
   93     | t_obj_id .

    T_L_PAR   shift, and go to state 116
    T_ASSIGN  shift, and go to state 117

    $default  reduce using rule 93 (expr)


State 99

   97 expr: block .

    $default  reduce using rule 97 (expr)


State 100

   58 assign: T_ASSIGN expr .
   81 expr: expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_AND    shift, and go to state 118
    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124
    T_EQUAL  shift, and go to state 125
    T_LOWER  shift, and go to state 126
    T_LEQ    shift, and go to state 127

    $default  reduce using rule 58 (assign)


State 101

   94 expr: literal .

    $default  reduce using rule 94 (expr)


State 102

  104 literal: boolean-literal .

    $default  reduce using rule 104 (literal)


State 103

   56 field: t_obj_id T_COLON type assign T_SEMI_COLON .

    $default  reduce using rule 56 (field)


State 104

   59 method: t_obj_id T_L_PAR formals T_R_PAR T_COLON type . block

    T_L_BRACE  shift, and go to state 95

    block  go to state 128


State 105

   68 virgul-formals: T_COMMA formal virgul-formals .

    $default  reduce using rule 68 (virgul-formals)


State 106

   73 expr: T_IF expr . T_THEN expr
   74     | T_IF expr . T_THEN expr T_ELSE expr
   81     | expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_AND    shift, and go to state 118
    T_THEN   shift, and go to state 129
    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124
    T_EQUAL  shift, and go to state 125
    T_LOWER  shift, and go to state 126
    T_LEQ    shift, and go to state 127


State 107

   80 expr: T_ISNULL expr .
   81     | expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_POW  shift, and go to state 123
    T_DOT  shift, and go to state 124

    $default  reduce using rule 80 (expr)


State 108

   76 expr: T_LET t_obj_id . T_COLON type assign T_IN expr

    T_COLON  shift, and go to state 130


State 109

   92 expr: T_NEW t_type_id .

    $default  reduce using rule 92 (expr)


State 110

   78 expr: T_NOT expr .
   81     | expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124
    T_EQUAL  shift, and go to state 125
    T_LOWER  shift, and go to state 126
    T_LEQ    shift, and go to state 127

    $default  reduce using rule 78 (expr)


State 111

   75 expr: T_WHILE expr . T_DO expr
   81     | expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_AND    shift, and go to state 118
    T_DO     shift, and go to state 131
    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124
    T_EQUAL  shift, and go to state 125
    T_LOWER  shift, and go to state 126
    T_LEQ    shift, and go to state 127


State 112

   70 block: T_L_BRACE expr . sc-expr T_R_BRACE
   81 expr: expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_AND         shift, and go to state 118
    T_SEMI_COLON  shift, and go to state 132
    T_PLUS        shift, and go to state 119
    T_MINUS       shift, and go to state 120
    T_TIMES       shift, and go to state 121
    T_DIV         shift, and go to state 122
    T_POW         shift, and go to state 123
    T_DOT         shift, and go to state 124
    T_EQUAL       shift, and go to state 125
    T_LOWER       shift, and go to state 126
    T_LEQ         shift, and go to state 127

    $default  reduce using rule 71 (sc-expr)

    sc-expr  go to state 133


State 113

   95 expr: T_L_PAR T_R_PAR .

    $default  reduce using rule 95 (expr)


State 114

   81 expr: expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR
   96     | T_L_PAR expr . T_R_PAR

    T_AND    shift, and go to state 118
    T_R_PAR  shift, and go to state 134
    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124
    T_EQUAL  shift, and go to state 125
    T_LOWER  shift, and go to state 126
    T_LEQ    shift, and go to state 127


State 115

   79 expr: T_MINUS expr .
   81     | expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124

    $default  reduce using rule 79 (expr)


State 116

   90 expr: t_obj_id T_L_PAR . args T_R_PAR

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    $default  reduce using rule 98 (args)

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 135
    args             go to state 136
    literal          go to state 101
    boolean-literal  go to state 102


State 117

   77 expr: t_obj_id T_ASSIGN . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 137
    literal          go to state 101
    boolean-literal  go to state 102


State 118

   82 expr: expr T_AND . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 138
    literal          go to state 101
    boolean-literal  go to state 102


State 119

   81 expr: expr T_PLUS . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 139
    literal          go to state 101
    boolean-literal  go to state 102


State 120

   86 expr: expr T_MINUS . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 140
    literal          go to state 101
    boolean-literal  go to state 102


State 121

   87 expr: expr T_TIMES . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 141
    literal          go to state 101
    boolean-literal  go to state 102


State 122

   88 expr: expr T_DIV . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 142
    literal          go to state 101
    boolean-literal  go to state 102


State 123

   89 expr: expr T_POW . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 143
    literal          go to state 101
    boolean-literal  go to state 102


State 124

   91 expr: expr T_DOT . t_obj_id T_L_PAR args T_R_PAR

    T_OBJ_ID  shift, and go to state 60

    t_obj_id  go to state 144


State 125

   83 expr: expr T_EQUAL . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 145
    literal          go to state 101
    boolean-literal  go to state 102


State 126

   85 expr: expr T_LOWER . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 146
    literal          go to state 101
    boolean-literal  go to state 102


State 127

   84 expr: expr T_LEQ . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 147
    literal          go to state 101
    boolean-literal  go to state 102


State 128

   59 method: t_obj_id T_L_PAR formals T_R_PAR T_COLON type block .

    $default  reduce using rule 59 (method)


State 129

   73 expr: T_IF expr T_THEN . expr
   74     | T_IF expr T_THEN . expr T_ELSE expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 148
    literal          go to state 101
    boolean-literal  go to state 102


State 130

   76 expr: T_LET t_obj_id T_COLON . type assign T_IN expr

    T_BOOL     shift, and go to state 70
    T_INT32    shift, and go to state 71
    T_STRING   shift, and go to state 72
    T_UNIT     shift, and go to state 73
    T_TYPE_ID  shift, and go to state 11

    t_type_id  go to state 74
    type       go to state 149


State 131

   75 expr: T_WHILE expr T_DO . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 150
    literal          go to state 101
    boolean-literal  go to state 102


State 132

   72 sc-expr: T_SEMI_COLON . expr sc-expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 151
    literal          go to state 101
    boolean-literal  go to state 102


State 133

   70 block: T_L_BRACE expr sc-expr . T_R_BRACE

    T_R_BRACE  shift, and go to state 152


State 134

   96 expr: T_L_PAR expr T_R_PAR .

    $default  reduce using rule 96 (expr)


State 135

   81 expr: expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR
   99 args: expr . comma-arg

    T_AND    shift, and go to state 118
    T_COMMA  shift, and go to state 153
    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124
    T_EQUAL  shift, and go to state 125
    T_LOWER  shift, and go to state 126
    T_LEQ    shift, and go to state 127

    $default  reduce using rule 100 (comma-arg)

    comma-arg  go to state 154


State 136

   90 expr: t_obj_id T_L_PAR args . T_R_PAR

    T_R_PAR  shift, and go to state 155


State 137

   77 expr: t_obj_id T_ASSIGN expr .
   81     | expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_AND    shift, and go to state 118
    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124
    T_EQUAL  shift, and go to state 125
    T_LOWER  shift, and go to state 126
    T_LEQ    shift, and go to state 127

    $default  reduce using rule 77 (expr)


State 138

   81 expr: expr . T_PLUS expr
   82     | expr . T_AND expr
   82     | expr T_AND expr .
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124
    T_EQUAL  shift, and go to state 125
    T_LOWER  shift, and go to state 126
    T_LEQ    shift, and go to state 127

    $default  reduce using rule 82 (expr)


State 139

   81 expr: expr . T_PLUS expr
   81     | expr T_PLUS expr .
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124

    $default  reduce using rule 81 (expr)


State 140

   81 expr: expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   86     | expr T_MINUS expr .
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124

    $default  reduce using rule 86 (expr)


State 141

   81 expr: expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   87     | expr T_TIMES expr .
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_POW  shift, and go to state 123
    T_DOT  shift, and go to state 124

    $default  reduce using rule 87 (expr)


State 142

   81 expr: expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   88     | expr T_DIV expr .
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_POW  shift, and go to state 123
    T_DOT  shift, and go to state 124

    $default  reduce using rule 88 (expr)


State 143

   81 expr: expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   89     | expr T_POW expr .
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_POW  shift, and go to state 123
    T_DOT  shift, and go to state 124

    $default  reduce using rule 89 (expr)


State 144

   91 expr: expr T_DOT t_obj_id . T_L_PAR args T_R_PAR

    T_L_PAR  shift, and go to state 156


State 145

   81 expr: expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   83     | expr T_EQUAL expr .
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124

    T_EQUAL  error (nonassociative)
    T_LOWER  error (nonassociative)
    T_LEQ    error (nonassociative)

    $default  reduce using rule 83 (expr)


State 146

   81 expr: expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   85     | expr T_LOWER expr .
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124

    T_EQUAL  error (nonassociative)
    T_LOWER  error (nonassociative)
    T_LEQ    error (nonassociative)

    $default  reduce using rule 85 (expr)


State 147

   81 expr: expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   84     | expr T_LEQ expr .
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124

    T_EQUAL  error (nonassociative)
    T_LOWER  error (nonassociative)
    T_LEQ    error (nonassociative)

    $default  reduce using rule 84 (expr)


State 148

   73 expr: T_IF expr T_THEN expr .
   74     | T_IF expr T_THEN expr . T_ELSE expr
   81     | expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_AND    shift, and go to state 118
    T_ELSE   shift, and go to state 157
    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124
    T_EQUAL  shift, and go to state 125
    T_LOWER  shift, and go to state 126
    T_LEQ    shift, and go to state 127

    T_AND     [reduce using rule 73 (expr)]
    T_ELSE    [reduce using rule 73 (expr)]
    T_PLUS    [reduce using rule 73 (expr)]
    T_MINUS   [reduce using rule 73 (expr)]
    T_TIMES   [reduce using rule 73 (expr)]
    T_DIV     [reduce using rule 73 (expr)]
    T_POW     [reduce using rule 73 (expr)]
    T_DOT     [reduce using rule 73 (expr)]
    T_EQUAL   [reduce using rule 73 (expr)]
    T_LOWER   [reduce using rule 73 (expr)]
    T_LEQ     [reduce using rule 73 (expr)]
    $default  reduce using rule 73 (expr)


State 149

   76 expr: T_LET t_obj_id T_COLON type . assign T_IN expr

    T_ASSIGN  shift, and go to state 80

    $default  reduce using rule 57 (assign)

    assign  go to state 158


State 150

   75 expr: T_WHILE expr T_DO expr .
   81     | expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_AND    shift, and go to state 118
    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124
    T_EQUAL  shift, and go to state 125
    T_LOWER  shift, and go to state 126
    T_LEQ    shift, and go to state 127

    T_AND     [reduce using rule 75 (expr)]
    T_PLUS    [reduce using rule 75 (expr)]
    T_MINUS   [reduce using rule 75 (expr)]
    T_TIMES   [reduce using rule 75 (expr)]
    T_DIV     [reduce using rule 75 (expr)]
    T_POW     [reduce using rule 75 (expr)]
    T_DOT     [reduce using rule 75 (expr)]
    T_EQUAL   [reduce using rule 75 (expr)]
    T_LOWER   [reduce using rule 75 (expr)]
    T_LEQ     [reduce using rule 75 (expr)]
    $default  reduce using rule 75 (expr)


State 151

   72 sc-expr: T_SEMI_COLON expr . sc-expr
   81 expr: expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_AND         shift, and go to state 118
    T_SEMI_COLON  shift, and go to state 132
    T_PLUS        shift, and go to state 119
    T_MINUS       shift, and go to state 120
    T_TIMES       shift, and go to state 121
    T_DIV         shift, and go to state 122
    T_POW         shift, and go to state 123
    T_DOT         shift, and go to state 124
    T_EQUAL       shift, and go to state 125
    T_LOWER       shift, and go to state 126
    T_LEQ         shift, and go to state 127

    $default  reduce using rule 71 (sc-expr)

    sc-expr  go to state 159


State 152

   70 block: T_L_BRACE expr sc-expr T_R_BRACE .

    $default  reduce using rule 70 (block)


State 153

  101 comma-arg: T_COMMA . expr comma-arg

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 160
    literal          go to state 101
    boolean-literal  go to state 102


State 154

   99 args: expr comma-arg .

    $default  reduce using rule 99 (args)


State 155

   90 expr: t_obj_id T_L_PAR args T_R_PAR .

    $default  reduce using rule 90 (expr)


State 156

   91 expr: expr T_DOT t_obj_id T_L_PAR . args T_R_PAR

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    $default  reduce using rule 98 (args)

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 135
    args             go to state 161
    literal          go to state 101
    boolean-literal  go to state 102


State 157

   74 expr: T_IF expr T_THEN expr T_ELSE . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 162
    literal          go to state 101
    boolean-literal  go to state 102


State 158

   76 expr: T_LET t_obj_id T_COLON type assign . T_IN expr

    T_IN  shift, and go to state 163


State 159

   72 sc-expr: T_SEMI_COLON expr sc-expr .

    $default  reduce using rule 72 (sc-expr)


State 160

   81 expr: expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR
  101 comma-arg: T_COMMA expr . comma-arg

    T_AND    shift, and go to state 118
    T_COMMA  shift, and go to state 153
    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124
    T_EQUAL  shift, and go to state 125
    T_LOWER  shift, and go to state 126
    T_LEQ    shift, and go to state 127

    $default  reduce using rule 100 (comma-arg)

    comma-arg  go to state 164


State 161

   91 expr: expr T_DOT t_obj_id T_L_PAR args . T_R_PAR

    T_R_PAR  shift, and go to state 165


State 162

   74 expr: T_IF expr T_THEN expr T_ELSE expr .
   81     | expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_AND    shift, and go to state 118
    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124
    T_EQUAL  shift, and go to state 125
    T_LOWER  shift, and go to state 126
    T_LEQ    shift, and go to state 127

    T_AND     [reduce using rule 74 (expr)]
    T_PLUS    [reduce using rule 74 (expr)]
    T_MINUS   [reduce using rule 74 (expr)]
    T_TIMES   [reduce using rule 74 (expr)]
    T_DIV     [reduce using rule 74 (expr)]
    T_POW     [reduce using rule 74 (expr)]
    T_DOT     [reduce using rule 74 (expr)]
    T_EQUAL   [reduce using rule 74 (expr)]
    T_LOWER   [reduce using rule 74 (expr)]
    T_LEQ     [reduce using rule 74 (expr)]
    $default  reduce using rule 74 (expr)


State 163

   76 expr: T_LET t_obj_id T_COLON type assign T_IN . expr

    T_FALSE       shift, and go to state 85
    T_IF          shift, and go to state 86
    T_ISNULL      shift, and go to state 87
    T_LET         shift, and go to state 88
    T_NEW         shift, and go to state 89
    T_NOT         shift, and go to state 90
    T_TRUE        shift, and go to state 91
    T_WHILE       shift, and go to state 92
    T_OBJ_ID      shift, and go to state 60
    T_INT_LIT     shift, and go to state 93
    T_STRING_LIT  shift, and go to state 94
    T_L_BRACE     shift, and go to state 95
    T_L_PAR       shift, and go to state 96
    T_MINUS       shift, and go to state 97

    t_obj_id         go to state 98
    block            go to state 99
    expr             go to state 166
    literal          go to state 101
    boolean-literal  go to state 102


State 164

  101 comma-arg: T_COMMA expr comma-arg .

    $default  reduce using rule 101 (comma-arg)


State 165

   91 expr: expr T_DOT t_obj_id T_L_PAR args T_R_PAR .

    $default  reduce using rule 91 (expr)


State 166

   76 expr: T_LET t_obj_id T_COLON type assign T_IN expr .
   81     | expr . T_PLUS expr
   82     | expr . T_AND expr
   83     | expr . T_EQUAL expr
   84     | expr . T_LEQ expr
   85     | expr . T_LOWER expr
   86     | expr . T_MINUS expr
   87     | expr . T_TIMES expr
   88     | expr . T_DIV expr
   89     | expr . T_POW expr
   91     | expr . T_DOT t_obj_id T_L_PAR args T_R_PAR

    T_AND    shift, and go to state 118
    T_PLUS   shift, and go to state 119
    T_MINUS  shift, and go to state 120
    T_TIMES  shift, and go to state 121
    T_DIV    shift, and go to state 122
    T_POW    shift, and go to state 123
    T_DOT    shift, and go to state 124
    T_EQUAL  shift, and go to state 125
    T_LOWER  shift, and go to state 126
    T_LEQ    shift, and go to state 127

    T_AND     [reduce using rule 76 (expr)]
    T_PLUS    [reduce using rule 76 (expr)]
    T_MINUS   [reduce using rule 76 (expr)]
    T_TIMES   [reduce using rule 76 (expr)]
    T_DIV     [reduce using rule 76 (expr)]
    T_POW     [reduce using rule 76 (expr)]
    T_DOT     [reduce using rule 76 (expr)]
    T_EQUAL   [reduce using rule 76 (expr)]
    T_LOWER   [reduce using rule 76 (expr)]
    T_LEQ     [reduce using rule 76 (expr)]
    $default  reduce using rule 76 (expr)
